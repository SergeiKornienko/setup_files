#!/bin/bash

# –ü—É—Ç–∏ –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–º —Ñ–∞–π–ª–∞–º
CONFIG_REPO="$HOME/setup_files"
CONFIG_FILES=(".zshrc" ".vimrc" ".tmux.conf")

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –û–°
if [ -x "$(command -v termux-setup-storage)" ]; then
    OS="termux"
    PACKAGE_MANAGER="pkg"
    INSTALL_CMD="install -y"
else
    OS="ubuntu"
    PACKAGE_MANAGER="sudo apt-get"
    INSTALL_CMD="install -y"
    $PACKAGE_MANAGER update
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤
install_packages() {
    for pkg in "$@"; do
        if ! command -v $pkg &> /dev/null; then
            echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º $pkg..."
            $PACKAGE_MANAGER $INSTALL_CMD $pkg || echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å $pkg"
        else
            echo "‚úì $pkg —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        fi
    done
}

# –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
BASE_PACKAGES="curl wget zsh python3 vim tmux fzf"
install_packages $BASE_PACKAGES

# –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
if [ "$OS" = "termux" ]; then
    install_packages openssh command-not-found termux-api
    termux-setup-storage
else
    install_packages ssh command-not-found zsh-syntax-highlighting zsh-autosuggestions
    [ ! -x "$(command -v sudo)" ] && apt-get install -y sudo
fi

# –†–∞–±–æ—Ç–∞ —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏
manage_configs() {
    if [ -d "$CONFIG_REPO" ]; then
        echo "üîç –ù–∞–π–¥–µ–Ω –ª–æ–∫–∞–ª—å–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∫–æ–Ω—Ñ–∏–≥–æ–≤: $CONFIG_REPO"
        
        for config in "${CONFIG_FILES[@]}"; do
            if [ -f "$CONFIG_REPO/$config" ]; then
                cp -v "$CONFIG_REPO/$config" ~/
#!/bin/bash
                # –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è tmux.conf
                if [ "$config" = ".tmux.conf" ] && [ "$OS" = "termux" ]; then
                    sed -i 's/^set -g default-terminal.*/# &/' ~/.tmux.conf
                    echo "üõ†Ô∏è –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–ª .tmux.conf –¥–ª—è Termux"
                fi
            else
                echo "‚ö†Ô∏è –§–∞–π–ª $config –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏"
            fi
        done
    else
        echo "üåê –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∫–æ–Ω—Ñ–∏–≥–æ–≤..."
        git clone https://github.com/SergeiKornienko/setup_files.git $CONFIG_REPO
        if [ -d "$CONFIG_REPO" ]; then
            for config in "${CONFIG_FILES[@]}"; do
                [ -f "$CONFIG_REPO/$config" ] && cp -v "$CONFIG_REPO/$config" ~/
            done
        fi
    fi
}

manage_configs


# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞–≥–∏–Ω–æ–≤ Oh My Zsh
setup_oh_my_zsh() {
    if command -v zsh &> /dev/null && [ ! -d "$HOME/.oh-my-zsh" ]; then
        echo "üöÄ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Oh My Zsh..."
        sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
    fi

    if [ -d "$HOME/.oh-my-zsh" ]; then
        echo "üîå –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–ª–∞–≥–∏–Ω—ã Zsh..."
        
        # –°–æ–∑–¥–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ø–ª–∞–≥–∏–Ω–æ–≤
        ZSH_CUSTOM="${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}"
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º zsh-completions
        if [ ! -d "$ZSH_CUSTOM/plugins/zsh-completions" ]; then
            git clone https://github.com/zsh-users/zsh-completions "$ZSH_CUSTOM/plugins/zsh-completions"
        else
            echo "‚úì zsh-completions —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        fi
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º zsh-autosuggestions
        if [ ! -d "$ZSH_CUSTOM/plugins/zsh-autosuggestions" ]; then
            git clone https://github.com/zsh-users/zsh-autosuggestions "$ZSH_CUSTOM/plugins/zsh-autosuggestions"
        else
            echo "‚úì zsh-autosuggestions —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        fi
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º zsh-syntax-highlighting
        if [ ! -d "$ZSH_CUSTOM/plugins/zsh-syntax-highlighting" ]; then
            git clone https://github.com/zsh-users/zsh-syntax-highlighting "$ZSH_CUSTOM/plugins/zsh-syntax-highlighting"
        else
            echo "‚úì zsh-syntax-highlighting —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        fi

        
    else
        echo "‚ö†Ô∏è Oh My Zsh –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
}

# –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —É—Å—Ç–∞–Ω–æ–≤–∫–∏
setup_oh_my_zsh

echo "‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Oh My Zsh –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Vim
if command -v vim &> /dev/null; then
    echo "‚úçÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Vim..."
    mkdir -p ~/.vim/{autoload,swap}
    
    if [ ! -f ~/.vim/autoload/plug.vim ]; then
        echo "‚¨áÔ∏è –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º vim-plug..."
        curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
            https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    fi
    
    echo "üîå –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–ª–∞–≥–∏–Ω—ã Vim..."
    vim -es -u ~/.vimrc -i NONE -c "PlugInstall" -c "qa"
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Tmux
if command -v tmux &> /dev/null && [ -f ~/.tmux.conf ]; then
    echo "üíª –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Tmux..."
    if [ "$OS" = "termux" ]; then
        echo "üñ•Ô∏è –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ Tmux –≤ TermuxÂèØËÉΩÈúÄË¶Å:"
        echo "1. –ó–∞–ø—É—Å—Ç–∏—Ç—å tmux"
        echo "2. –ù–∞–∂–∞—Ç—å Ctrl+B, –∑–∞—Ç–µ–º :source-file ~/.tmux.conf"
    fi
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH
if [ ! -f ~/.ssh/id_ed25519 ]; then
    echo "üîë –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º SSH-–∫–ª—é—á..."
    mkdir -p ~/.ssh
    ssh-keygen -t ed25519 -f ~/.ssh/id_ed25519 -N "" -q
    echo -e "\nüîí –ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á (–¥–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –Ω–∞ GitHub –∏ –¥—Ä. —Å–µ—Ä–≤–∏—Å—ã):"
    cat ~/.ssh/id_ed25519.pub
fi

echo -e "\nüéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "–î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
echo "source ~/.zshrc && tmux source-file ~/.tmux.conf"
